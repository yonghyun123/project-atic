<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keb.atic.userProject.mapper.UserProjectMapper">

	<insert id="createUserProject">
	INSERT INTO at_user_project(
	id, deposit, user_id, project_id, create_date
	) 
	VALUES (user_project_id_seq.NEXTVAL, 
             #{deposit}, 
             #{userId}, 
             #{projectId}, 
             sysdate)
	</insert>
	
	<select id="readUserTotalDeposit" parameterType="string" resultType="com.keb.atic.userProject.domain.UserProject">
	SELECT user_id      AS "userId", 
       SUM(deposit) AS "totalDeposit" 
	FROM   at_user_project 
	WHERE  To_char(create_date, 'YYYYMM') = To_char(SYSDATE, 'YYYYMM') 
	AND user_id = #{userId}
	GROUP  BY user_id
	</select>
	
	<select id="userProjectListAll" resultType="com.keb.atic.userProject.domain.UserProject">
	
	</select>
	
	<select id="readUserProjectsByUser" resultType="com.keb.atic.userProject.domain.UserProject">
	SELECT
		 p.id AS "projectId", 
		 p.name AS "name",
		 p.goal AS "goal",
		 p.cur_price AS "curPrice",
		 p.company AS "company",
		 up.deposit AS "deposit",
		 TO_CHAR(up.create_date,'YYYY-MM-DD') AS "createDate"
	FROM AT_user_project up, AT_project p
	WHERE up.user_id = #{userId} and up.project_id = p.id
	ORDER BY up.create_date desc
	</select>
	
	<select id="readUserProjectsByProject" resultType="com.keb.atic.userProject.domain.UserProject">
	SELECT id AS "id", 
       deposit AS "deposit", 
       user_id AS "userId", 
       project_id AS "projectId",
       create_date AS "createDate"
	FROM   at_user_project 
	WHERE  project_id = #{projectId}
	ORDER BY deposit desc
	</select>
	
	<select id="countOfInvestor" resultType="int">
	SELECT count(*)
	FROM   at_user_project 
	WHERE  project_id = #{projectId}
	</select>
	
	<select id="getCompanyListByDate" parameterType="map" resultType="com.keb.atic.userProject.domain.UserProject" >
	SELECT up.id AS "id", 
		 p.id AS "projectId", 
		 p.name AS "name",
		 p.goal AS "goal",
		 p.cur_price AS "curPrice",
		 p.company AS "company",
		 up.deposit AS "deposit",
		 TO_CHAR(up.create_date,'YYYY-MM-DD') AS "createDate"
	FROM AT_user_project up, AT_project p
	WHERE up.user_id=#{userId} and up.project_id = p.id
	AND  up.create_date BETWEEN to_date(#{startDate},'YYYYMMDD') AND to_date(#{endDate}+1,'YYYYMMDD') 
	ORDER BY up.create_date desc
	</select>

	<delete id="deleteUserProjectByCondition" parameterType="Map">
	
	</delete>

	<update id="updateUserProject">
	
	</update>
	
	<select id="checkInvest" resultType="int">
	SELECT Count(*) 
	FROM   at_user_project 
	WHERE  user_id = #{userId} 
       AND project_id = #{projectId} 
	</select>
	
	<select id="riseProject" resultType="com.keb.atic.userProject.domain.UserProject">
	select sum(deposit) as "deposit", 
	project_id as "projectId",
	p.name as "projectName"
	from at_user_project up
 	join at_project p
 	on p.id = up.project_id
 	where (up.create_date BETWEEN to_date(to_char(sysdate,'yyyy/mm/dd'))  and sysdate)
 	group by up.project_id, p.name
 	order by sum(deposit) desc
	</select>
	
	<select id="checkDeposit" resultType="int">
	SELECT Nvl(SUM(deposit), 0) 
	FROM   at_user_project 
	WHERE  user_id = #{userId} 
       AND To_char(create_date, 'YYYYMM') = To_char(SYSDATE, 'YYYYMM') 
	</select>
</mapper>