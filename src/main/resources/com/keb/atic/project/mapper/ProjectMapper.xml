<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keb.atic.project.mapper.ProjectMapper">

	<select id="createProject">
	
	</select>
	<select id="readProject" resultType="com.keb.atic.project.domain.Project">
		SELECT 	   p.id          AS "id", 
			       p.NAME        AS "name", 
			       p.title       AS "title", 
			       p.description AS "description", 
			       p.cur_price   AS "curPrice", 
			       p.tel         AS "tel", 
			       p.interest    AS "interest", 
			       p.goal        AS "goal", 
			       p.company     AS "company", 
			       c.NAME        AS "category", 
			       TO_CHAR(p.create_date,'YYYY-MM-DD') AS "createDate", 
			       f.file_name   AS "fileName" 
			FROM   at_project p 
			       JOIN at_category c 
			         ON p.category_id = c.id 
			       JOIN at_project_image pi 
			         ON p.id = pi.project_id 
			       JOIN at_file_info f 
			         ON pi.file_id = f.file_id 
			WHERE  p.id = #{id} 
			       AND pi.image_type = 'th'
	</select>
	
	<!-- 이번달 목표금액 달성 순 -->
	<select id="readProjectsByGoal"  resultType="com.keb.atic.project.domain.Project">
			SELECT p.id			  AS "id",
				   p.NAME         AS "name", 
			       p.goal         AS "goal", 
			       p.company      AS "company", 
			       c.NAME         AS "category", 
			       p.create_date  AS "createDate", 
			       f.file_name    AS "fileName"
			from AT_project p join at_category c
			on p.category_id = c.ID join AT_PROJECT_IMAGE pi
			on p.id = pi.PROJECT_ID join AT_FILE_INFO f
			on pi.FILE_ID = f.FILE_ID
			where  to_char(p.create_date,'MM') = to_char(sysdate,'MM')
			and pi.IMAGE_TYPE = 'th'
			order by p.goal desc
	</select>
	
	<!-- 월별 예비 등록 사업 조회 -->
	<select id="readMonthProjectByGoal"  parameterType="map" resultType="com.keb.atic.project.domain.Project">
    SELECT "id",
    	   "name",
    	   "title",
           "goal",
           "company",
           "category",
           "createDate",
           "fileName",
           "progress"
    FROM (
      SELECT p.id			AS "id", 
      		 p.NAME         AS "name",
      		 p.title         AS "title",
			 p.goal         AS "goal", 
			 p.company      AS "company", 
			 c.NAME         AS "category", 
			 p.create_date  AS "createDate", 
			 f.file_name    AS "fileName",
			 round((p.CUR_PRICE/ p.goal)*100) AS "progress"
			from AT_project p join at_category c
				on p.category_id = c.ID join AT_PROJECT_IMAGE pi
				on p.id = pi.PROJECT_ID join AT_FILE_INFO f
				on pi.FILE_ID = f.FILE_ID
			where  to_char(p.create_date,'MM') =#{month}
				and pi.IMAGE_TYPE = 'th'
				order by p.goal desc
        )
        where rownum <![CDATA[ <= ]]> #{count}
	</select>
	
	<select id="readProjectsByPercent"  parameterType="map" resultType="com.keb.atic.project.domain.Project">
					SELECT p.id	  AS "id",
				   round((p.CUR_PRICE/ p.goal)*100) AS "progress",
				   p.NAME         AS "name",
				   p.title		  AS "title", 
			       p.goal         AS "goal", 
			       p.company      AS "company", 
			       c.NAME         AS "category", 
			       p.create_date  AS "createDate", 
			       f.file_name    AS "fileName"
				FROM   at_project p 
				       JOIN at_category c 
				         ON p.category_id = c.id 
				       JOIN at_project_image pi 
				         ON p.id = pi.project_id 
				       JOIN at_file_info f 
				         ON pi.file_id = f.file_id 
				WHERE  To_char(p.create_date, 'MM') = #{month}
				       AND pi.image_type = 'th' 
				       AND ROWNUM <![CDATA[ <= ]]> #{count}
				ORDER  BY DBMS_RANDOM.RANDOM 
	</select>
	
	<select id="readProjectsByEval"  resultType="com.keb.atic.project.domain.Project">
			SELECT p.id			  AS "id",
				   p.NAME         AS "name", 
			       p.goal         AS "goal", 
			       p.company      AS "company", 
			       c.NAME         AS "category", 
			       p.create_date  AS "createDate", 
			       f.file_name    AS "fileName"
			FROM   at_project p 
			       JOIN at_category c 
			         ON p.category_id = c.id 
			       JOIN at_project_image pi 
			         ON p.id = pi.project_id 
			       JOIN at_file_info f 
			         ON pi.file_id = f.file_id 
			       LEFT OUTER JOIN at_user_eval e 
			                    ON p.id = e.project_id 
			WHERE  To_char(p.create_date, 'MM') = To_char(sysdate, 'MM') 
			       AND pi.image_type = 'th' 
			ORDER  BY Nvl(stable_grade + favor_grade + growth_grade 
			              + market_grade, 0) DESC 
	</select>
	
	<select id="readProjectByCondition" parameterType="map" resultType="com.keb.atic.project.domain.Project">
					SELECT p.id	  AS "id",
				   round((p.CUR_PRICE/ p.goal)*100) AS "progress",
				   p.NAME         AS "name",
				   p.title 		  AS "title",
			       p.goal         AS "goal", 
			       p.company      AS "company", 
			       c.NAME         AS "category", 
			       p.create_date  AS "createDate", 
			       <choose>
			       <when test='condition != null and condition.equals("goal")'>
			       f.file_name    AS "fileName",
			       (CASE WHEN ( round((p.CUR_PRICE/ p.goal)*100)>= '100' ) THEN 'end'
        			ELSE '0' END) AS "finish"
			       From AT_project p join at_category c
					on p.category_id = c.ID join AT_PROJECT_IMAGE pi
					on p.id = pi.PROJECT_ID join AT_FILE_INFO f
					on pi.FILE_ID = f.FILE_ID
				   WHERE  to_char(p.create_date,'MM') = #{month}
					and pi.IMAGE_TYPE = 'th'
					order by p.goal desc
			       </when>
			       <when test='condition != null and condition.equals("eval")'>
			       f.file_name    AS "fileName"
						from AT_project p join at_category c
						on p.category_id = c.ID join AT_PROJECT_IMAGE pi
						on p.id = pi.PROJECT_ID join AT_FILE_INFO f
						on pi.FILE_ID = f.FILE_ID left outer join AT_USER_EVAL e
						on p.ID = e.PROJECT_ID
						where  To_char(p.create_date, 'MM') = #{month}
						and pi.IMAGE_TYPE = 'th'
						group by p.id, p.CUR_PRICE, round((p.CUR_PRICE/ p.goal)*100), p.NAME, 
						p.goal, p.company, c.NAME, p.create_date, p.title, 
						f.file_name
						order by nvl(avg(STABLE_GRADE + FAVOR_GRADE + GROWTH_GRADE + MARKET_GRADE),0) desc
			   		</when> 
			       </choose>
	</select>
	
	<select id="readFinishProject" resultType="com.keb.atic.project.domain.Project">
	SELECT ap.id   AS "id",
				   round((ap.CUR_PRICE/ ap.goal)*100) AS "progress",
				   ap.NAME         AS "name",
				   ap.title		   AS "title", 
			       ap.goal         AS "goal", 
			       ap.company      AS "company", 
			       ac.NAME         AS "category", 
			       ap.create_date  AS "createDate", 
			       afi.file_name   AS "fileName"
	FROM at_project ap
	JOIN at_project_image api
	ON ap.id = api.project_id
	JOIN at_category ac
	ON ap.category_id = ac.id
	JOIN at_file_info afi
	ON api.file_id = afi.file_id  
	WHERE to_char(ap.create_date,'YYYYMM') <![CDATA[ < ]]> #{month}
	AND api.image_type = 'th'
	ORDER BY ap.id desc
	</select>
	
	<select id="projectListAll"  resultType="com.keb.atic.project.domain.Project">
		SELECT p.id			  AS "id",
			   p.NAME         AS "name", 
		       p.goal         AS "goal", 
		       p.company      AS "company", 
		       c.NAME         AS "category", 
		       p.create_date  AS "createDate", 
		       f.file_name    AS "fileName"
		FROM   at_project p 
		       JOIN at_category c 
		         ON p.category_id = c.id 
		       JOIN at_project_image pi 
		         ON p.id = pi.project_id 
		       JOIN at_file_info f 
		         ON pi.file_id = f.file_id 
		WHERE  To_char(p.create_date, 'MM') = To_char(sysdate, 'MM') 
		       AND pi.image_type = 'th'
	</select>
	
	
	<delete id="deleteProject" >
	
	</delete>

	<update id="updateProject">
	UPDATE at_project
		<set>
			<if test="curPrice != null">cur_price = #{curPrice}</if>
		</set>
	WHERE id=#{id}
	</update>
	
	
	<select id="recommendProject" resultType="com.keb.atic.project.domain.Project">
	(SELECT project_id as "id"
	FROM  (SELECT project_id, 
              Count(*) AS count 
       FROM   at_project p 
              join at_user_project up 
                ON p.id = up.project_id 
       WHERE  user_id in (SELECT user_id 
                            FROM   at_project p 
                                   join at_user_project up 
                                     ON p.id = up.project_id 
                            WHERE  up.project_id = #{projectId})
       GROUP  BY project_id 
       ORDER  BY Count(*) DESC) 
	WHERE  ROWNUM BETWEEN 1 AND 4)
	minus
	(select id
	from AT_PROJECT
	where id = #{projectId}
	) 
	</select>
	
	<select id="getSuccessCagetory" resultType="int">
	SELECT category_id
	FROM AT_project
	WHERE id = #{projectId}
	</select>
</mapper>